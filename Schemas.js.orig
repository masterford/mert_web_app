var config = require('./config.js');
var bcrypt = require('bcrypt');
var mongoose = require('mongoose');

// note: your host/port number may be different!
mongoose.connect(`mongodb://localhost:${config.portNumber}/mongodb`);

var Schema = mongoose.Schema;

var UserSchema = new Schema( {
    username: {type: String, required: true, unique: true},
    password: {type: String, required: true, unique: false},
    id: {type: Number, required: true, unique: true},
} );

var EmployeeSchema = new Schema( {
    username: {type: String, required: true, unique: true},
    password: {type: String, required: true, unique: false},
    organization: {type: Number, required: true, unique: false},
    phoneNumber : Number,
    type: String
} );

EmployeeSchema.pre('save', function (next) {
    var user = this;
    bcrypt.hash(user.password, 10, function (err, hash) {
        if (err) {
            return next(err);
        }
        user.password = hash;
        next();
    })
});

EmployeeSchema.statics.authenticate = function (username, password, organization, callback) {
    User.findOne({ username : username, organization : organization })
        .exec(function (err, user) {
            if (err) {
                return callback(err)
            } else if (!user) {
                var err = new Error('User not found.');
                err.status = 401;
                return callback(err);
            }
            bcrypt.compare(password, user.password, function (err, result) {
                //success
                if (result === true) {
                    return callback(null, user);
                } else { //failure
                    return callback();
                }
            })
        });
}
var RequestSchema = new Schema( {
<<<<<<< HEAD
    id: {type: Number, required: true, unique: true},
    date: {type: String, required: true},
    latitude: {type: Number, required: true},
    longitude: {type: Number, required: true},
    status: {type: Number, required: true},
    user: {type: [UserSchema], required: true},
    phoneNumber: Number
} );


module.exports = {
    Employee : mongoose.model('Employee', EmployeeSchema),
    User : mongoose.model('User', UserSchema),
    Request : mongoose.model('Request', RequestSchema)
};
=======
      id: {type: Number, required: true, unique: true},
      date: {type: Date, required: true},
      latitude: {type: Number, required: true},
      longitude: {type: Number, required: true},
      status: {type: Number, required: true},
      user: {type: [UserSchema], required: true},
      phoneNumber: Number
    } );


module.exports = { 
				Employee : mongoose.model('Employee', EmployeeSchema),
				User : mongoose.model('User', UserSchema),
				Request : mongoose.model('Request', RequestSchema)
				};
>>>>>>> 1e9d8044a7622ccf879549b3ea4a50a251f85ac3

